
&НаСервере
Процедура РаботаемНаСервере()    
	
	        
	    Проверка = "Бот, рейтинг" ;
		Токен =  Константы.Токен.Получить();
	АдресURL = СтрШаблон("https://api.telegram.org/bot%1/getUpdates", Токен);
	 
	НомерПоследнегоОбновления = Константы.НомерПоследнегоОбновления.Получить(); 
	СмещениеНомераОбновления  = НомерПоследнегоОбновления + 1;
	 
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("offset", Формат(СмещениеНомераОбновления, "ЧГ=0"));
	 
	РезультатОбновления = Неопределено;
	Попытка
	    РезультатОбновления = КоннекторHTTP.GetJson(АдресURL, ПараметрыЗапроса);    
	Исключение
	    Журнал.ДобавитьСтроку(ОписаниеОшибки());
	    Возврат;
	КонецПопытки;
	 
	ОбновлениеВыполнено = РезультатОбновления["ok"];
	Если НЕ ОбновлениеВыполнено Тогда
	    Журнал.ДобавитьСтроку(СтрШаблон("Ошибка: %1 - %2", РезультатОбновления["error_code"], РезультатОбновления["description"]));
	    Возврат;
	КонецЕсли;
	 
	МассивОбновлений = РезультатОбновления["result"];
	Если МассивОбновлений.Количество() = 0 Тогда
	    Журнал.ДобавитьСтроку("Нет сообщений.");
	    Возврат;
	КонецЕсли;
	 
	Для каждого Обновление Из МассивОбновлений Цикл
	     
	    ИдентификаторОбновления = Обновление["update_id"];
	     
	    Сообщение = Обновление.Получить("message");
	     
	    ИдентификаторСообщения  = Сообщение.Получить("message_id");
	    ТектСообщения           = Сообщение.Получить("text");
	    ДатаСообщения           = Сообщение.Получить("date");
	     
	    ОтправительСообщения    = Сообщение.Получить("from");
	    ИмяПользователя         = ОтправительСообщения.Получить("username");
	     
	    Чат                     = Сообщение.Получить("chat");
	    ИдентификаторЧата       = Чат.Получить("id"); 
		Кавычка=Прав("",2); 
		ПроверкаИзБазы = Кавычка+Справочники.ИсторияСообщений.НайтиПоНаименованию(ТектСообщения)+Кавычка;  	
		Если ТектСообщения <> Проверка и ПроверкаИзБазы<>ТектСообщения Тогда    
			НовоеСообщение = Справочники.ИсторияСообщений.СоздатьЭлемент(); // Создание элемента
НовоеСообщение.Наименование = ТектСообщения; // Заполнение текста сообщения
НовоеСообщение.ID = ИдентификаторСообщения; // Заполнение последнего обновления 
НовоеСообщение.Записать();
АдресURL = СтрШаблон("https://api.telegram.org/bot%1/sendMessage", Токен);
		        Текст= "";
		ПараметрыЗапроса = Новый Структура;
		ТекстСообщений= ФинальныйВариант.ПолучитьТекст(); 
		ПараметрыЗапроса.Вставить("chat_id",    Формат(ИдентификаторЧата, "ЧГ=0"));
		ПараметрыЗапроса.Вставить("text",     Текст  );
		 
		РезультатОтправки = Неопределено;
		Попытка
		    РезультатОтправки = КоннекторHTTP.GetJson(АдресURL, ПараметрыЗапроса);  
		Исключение
		    Журнал.ДобавитьСтроку(ОписаниеОшибки());
		   		КонецПопытки;
		 
		СообщениеОтправлено = РезультатОтправки["ok"];
		Если СообщениеОтправлено Тогда
		     
		    Журнал.ДобавитьСтроку(СтрШаблон("Сообщение: %1 - Отправлено пользователю: %2", ТектСообщения, ИмяПользователя));
		    НомерПоследнегоОбновления = ИдентификаторОбновления;
		     
		Иначе
		    Журнал.ДобавитьСтроку(СтрШаблон("Ошибка: %1 - %2", РезультатОтправки["error_code"], РезультатОтправки["description"]));
		КонецЕсли;

	 
	Если НомерПоследнегоОбновления >= СмещениеНомераОбновления Тогда
	    Константы.НомерПоследнегоОбновления.Установить(НомерПоследнегоОбновления);      
	КонецЕсли; 


КонецЕсли;
           //начинается вывод
			     
	   КонецЦикла; 
	   Если ТектСообщения = Проверка Тогда
	            ВывестиСловоНаСервере();
		АдресURL = СтрШаблон("https://api.telegram.org/bot%1/sendMessage", Токен);
		
		ПараметрыЗапроса = Новый Структура;
		ТекстСообщений= ФинальныйВариант.ПолучитьТекст(); 
		ПараметрыЗапроса.Вставить("chat_id",    Формат(ИдентификаторЧата, "ЧГ=0"));
		ПараметрыЗапроса.Вставить("text",       ТекстСообщений);
		 
		РезультатОтправки = Неопределено;
		Попытка
		    РезультатОтправки = КоннекторHTTP.GetJson(АдресURL, ПараметрыЗапроса);  
		Исключение
		    Журнал.ДобавитьСтроку(ОписаниеОшибки());
		   		КонецПопытки;
		 
		СообщениеОтправлено = РезультатОтправки["ok"];
		Если СообщениеОтправлено Тогда
		     
		    Журнал.ДобавитьСтроку(СтрШаблон("Сообщение: %1 - Отправлено пользователю: %2", ТектСообщения, ИмяПользователя));
		    НомерПоследнегоОбновления = ИдентификаторОбновления;
		     
		Иначе
		    Журнал.ДобавитьСтроку(СтрШаблон("Ошибка: %1 - %2", РезультатОтправки["error_code"], РезультатОтправки["description"]));
		КонецЕсли;

	 
	Если НомерПоследнегоОбновления >= СмещениеНомераОбновления Тогда
	    Константы.НомерПоследнегоОбновления.Установить(НомерПоследнегоОбновления);      
	КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Работаем(Команда)
	РаботаемНаСервере();
КонецПроцедуры


&НаСервере
Процедура ВывестиСловоНаСервере()   
	Журнал.Очистить();
	Выборка = Справочники.ИсторияСообщений.Выбрать();
     Пока Выборка.Следующий() Цикл
 

	 Журнал.ДобавитьСтроку(Выборка.Наименование)  ;  
	 
 КонецЦикла;
 
 Текст=Журнал.ПолучитьТекст(); 
 
 //редактирую текст
	 Текст=Трег(Текст);  
	 Текст = СтрЗаменить(Текст,"-","");
      Текст = СтрЗаменить(Текст, ",", ""); 
Текст = СтрЗаменить(Текст, ".", "");

 Текст = СтрЗаменить(Текст, "!", "");

Текст = СтрЗаменить(Текст, "?", "");
  Текст = СтрЗаменить(Текст, ":", "");
    Текст = СтрЗаменить(Текст, ";", "");
            
 Текст = СтрЗаменить(Текст, " ", Символы.ПС); 
 //Конец редактирования
 
 МассивСообщенийПоОдному = СтрРазделить(Текст, Символы.ПС);  
 Список = Новый СписокЗначений; 
Список.ЗагрузитьЗначения(МассивСообщенийПоОдному); 
Список.СортироватьПоЗначению(НаправлениеСортировки.Возр); 
МассивСообщенийПоОдному = Список.ВыгрузитьЗначения();
Индекс = Неопределено;
Длина = 0;  
МассивИстории= Новый Массив; 
МассивСообщений= Новый Массив;
КоличествоПовторений= Новый Массив;//      будем удалять максимальный элемент
Для сч=0 По МассивСообщенийПоОдному.ВГраница() Цикл 
    ИскомоеСлово = МассивСообщенийПоОдному[сч] ;
	
	
               КоличествоВДиалоге = СтрЧислоВхождений( Текст, ИскомоеСлово);

	ИскомоеСлово1 = ИскомоеСлово + " Количество в диалоге ="+ КоличествоВДиалоге;  
	МассивИстории.Добавить(ИскомоеСлово1);
	МассивСообщений.Добавить(ИскомоеСлово); 
	КоличествоПовторений.Добавить(КоличествоВДиалоге);
    		
	СловоВФинальномВарианте = СтрЧислоВхождений( МассивИстории, ИскомоеСлово1);
	 

	Если КоличествоВдиалоге > 0 и СловоВФинальномВарианте < 1  Тогда 
			      Индекс = сч + 1;  
	Конецесли;
КонецЦикла;  
МассивСообщенийБезДублей= УбратьДублиИзМассива(МассивСообщений);
				
	Для каждого Элемент Из МассивСообщенийБезДублей Цикл
		ФинальныйВариант.ДобавитьСтроку(Элемент);
	КонецЦикла;       
	ТекстЖурнала=Журнал.ПолучитьТекст();
	ИндексыДляУдаления=СтрРазделить(ТекстЖурнала, Символы.ПС);
	Для сч=0 по ИндексыДляУдаления.ВГраница() Цикл
		            Число= ИндексыДляУдаления[сч]; 
					Если число<> "" Тогда
					КоличествоПовторений.Удалить(Число)  ;
					Индекс= сч+1;
					КонецЕсли;
				КонецЦикла; 
				Журнал.Очистить();
	Для каждого Элемент Из КоличествоПовторений Цикл
		Журнал.ДобавитьСтроку(Элемент);
	КонецЦикла; 
	  
	ЧислоДляЦикла=0;
	      ФинальныйВариант.Очистить();
	Пока  ЧислоДляЦикла<6 Цикл
	ИндексПопулярногоСлова=ПоискПопулярногоСлова(КоличествоПовторений);
	ПопулярноеСлово = МассивСообщенийБезДублей.Получить(ИндексПопулярногоСлова);
	КоличествоПоявление= КоличествоПовторений.Получить(ИндексПопулярногоСлова); 
	
	Если ЧислоДляЦикла=0 Тогда
		ФинальныйВариант.ДобавитьСтроку("Текущий рейтинг слов:");
		ИначеЕсли ЧислоДляЦикла=1 Тогда
	ФинальныйВариант.ДобавитьСтроку("1️⃣."+ПопулярноеСлово +"-"+ КоличествоПоявление+";"); 
	ИначеЕсли ЧислоДляЦикла=2 Тогда
	ФинальныйВариант.ДобавитьСтроку("2️⃣."+ПопулярноеСлово +"-"+ КоличествоПоявление+";"); 
	ИначеЕсли ЧислоДляЦикла=3 Тогда
	ФинальныйВариант.ДобавитьСтроку("3️⃣."+ПопулярноеСлово +"-"+ КоличествоПоявление+";"); 
	ИначеЕсли ЧислоДляЦикла=4 Тогда
	ФинальныйВариант.ДобавитьСтроку("4️⃣."+ПопулярноеСлово +"-"+ КоличествоПоявление+";");
	ИначеЕсли ЧислоДляЦикла=5 Тогда
	ФинальныйВариант.ДобавитьСтроку("5️⃣."+ПопулярноеСлово +"-"+ КоличествоПоявление+";");

КонецЕсли;

	 МассивСообщенийБезДублей.Удалить(ИндексПопулярногоСлова);
	 КоличествоПовторений.Удалить(ИндексПопулярногоСлова);
	      ЧислоДляЦикла= ЧислоДляЦикла+1;
	   КонецЦикла;
	 
	

КонецПроцедуры  
		 
	&НаСервере
	Функция УбратьДублиИзМассива(МассивИстории) Экспорт 
		Журнал.Очистить();
	ИндексТекущегоЭлемента = 0; 
	ВсегоЭлементов = МассивИстории.Количество(); 
	
	Пока ИндексТекущегоЭлемента < ВсегоЭлементов Цикл 
		ИндексСледующегоЭлемента = ИндексТекущегоЭлемента + 1; 
		Пока ИндексСледующегоЭлемента < ВсегоЭлементов Цикл 
			Если МассивИстории[ИндексСледующегоЭлемента] = МассивИстории[ИндексТекущегоЭлемента] Тогда 
				Журнал.ДобавитьСтроку(ИндексСледующегоЭлемента);
				МассивИстории.Удалить(ИндексСледующегоЭлемента); 
				ВсегоЭлементов = ВсегоЭлементов - 1; 
			Иначе 
				ИндексСледующегоЭлемента = ИндексСледующегоЭлемента + 1; 
			КонецЕсли; 
		КонецЦикла; 
		ИндексТекущегоЭлемента = ИндексТекущегоЭлемента + 1; 
	КонецЦикла; 
	Возврат МассивИстории; 
КонецФункции 




      &НаСервере
	Функция ПоискПопулярногоСлова(КоличествоПовторений) Экспорт 
		 
  
  
 ИндексМаксимальногоЭлемента = -1;
ЗначениеМаксимальногоЭлемента = -Pow(2, 31); // Значение, заведомо меньшее любого элемента в массиве.

Для Индекс = 0 По КоличествоПовторений.Количество() - 1 Цикл
    Если КоличествоПовторений[Индекс] > ЗначениеМаксимальногоЭлемента Тогда
        ЗначениеМаксимальногоЭлемента = КоличествоПовторений[Индекс];
        ИндексМаксимальногоЭлемента = Индекс;
    КонецЕсли;
КонецЦикла; 
Возврат  ИндексМаксимальногоЭлемента;
КонецФункции 




&НаКлиенте
Процедура ВывестиСлово(Команда)
	ВывестиСловоНаСервере();
КонецПроцедуры

